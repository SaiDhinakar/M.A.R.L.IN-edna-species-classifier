## **Prompt: Build a React + Tailwind eDNA Web App (MVP)**

**Project Name:** DeepSea eDNA Dashboard

**Purpose:**
A professional, clean, and user-friendly dashboard for **visualizing and managing eDNA sequence analyses**. Ready for **API integration**, but currently using placeholder data. The app should allow researchers to explore sequences, clusters, taxonomic assignments, and biodiversity metrics.

---

React + tailwind is already setuped in the frontend folder.

### **1. Theme & Design Context**

* **Theme:** Clean, minimal, professional.
* **Colors:**

  * Primary: #1E3A8A (dark blue/navy)
  * Secondary: #3B82F6 (blue)
  * Accents: #10B981 (green), #F59E0B (amber)
  * Background: #F9FAFB (light gray)
  * Text: #111827 (dark), #6B7280 (gray)
* **Typography:** Sans-serif (Inter or Poppins)
* **UI Style:** Cards, tables, simple charts; minimal shadows, subtle hover effects
* **Responsiveness:** Fully responsive, mobile-first

---

### **2. Pages / Routes**

1. **Dashboard (`/dashboard`)**

   * **Components:**

     * **Header:** App title, user profile dropdown, notification icon
     * **Sidebar Navigation:** Links: Dashboard, Sequences, Clusters, Metrics, Settings
     * **Main Content:**

       * Overview cards:

         * Total Sequences
         * Total Clusters
         * Novel Taxa Count
         * Shannon Diversity Index
       * Interactive chart: Pie chart for Taxonomic Distribution (placeholder data)
       * Cluster map: Card displaying top 5 clusters with sequence counts

2. **Sequences Page (`/sequences`)**

   * **Components:**

     * Search/filter bar: Search by sequence ID, cluster, or taxa
     * Table: List of sequences (placeholder columns: ID, Cluster, Length, Quality Score, Taxonomic Assignment)
     * Row action buttons: View details, download FASTA, mark for review
     * Pagination & sorting
   * **API Readiness:** Fetch sequences via API (placeholder JSON array)

3. **Clusters Page (`/clusters`)**

   * **Components:**

     * Cluster summary cards: Cluster ID, # of sequences, consensus sequence snippet
     * Expandable detail table for each cluster: Sequence IDs, predicted taxa, novelty score
     * Filtering options: By size, novelty score
   * **Charts:** Bar chart of cluster sizes

4. **Metrics Page (`/metrics`)**

   * **Components:**

     * Biodiversity Metrics Cards: Shannon Index, Richness, Evenness
     * Line chart / Area chart for diversity over time or samples
     * Comparative chart: Known vs Novel taxa percentages
   * **Filters:** Time-range, sample type

5. **Sequence / Cluster Detail Page (`/sequence/:id` / `/cluster/:id`)**

   * **Components:**

     * Header: ID and cluster info
     * Card: Consensus sequence (with copy/download button)
     * Table: Member sequences
     * Taxonomic tree visualization (placeholder, hierarchical)
     * Notes/annotations section

6. **Settings / Profile Page (`/settings`)**

   * **Components:**

     * User profile: Name, email, role
     * Preferences: Theme toggle (light/dark), notification settings
     * API integration settings: Endpoint URLs, API keys (placeholder form)

---

### **3. Core Components**

* **Header:** Top navigation bar with logo, page title, profile dropdown
* **Sidebar:** Collapsible, with page links and icons
* **Card:** Reusable component for metrics/statistics
* **Table:** Reusable table with sorting, pagination, filtering
* **Charts:** Recharts or Plotly for pie/bar/line/area charts
* **Form Input Components:** TextInput, Dropdown, Switch, Search bar
* **Modal / Dialog:** For confirmation actions, sequence details, or settings edits
* **Badge / Tag:** For novelty score, taxa type, or cluster status
* **Loader / Spinner:** For async data fetching
* **Notification Toast:** For success/error messages

---

### **4. Data / Placeholder**

* **Sequences Example JSON:**

```json
[
  {
    "id": "SEQ_001",
    "cluster": "CL_01",
    "length": 150,
    "quality": 98,
    "taxa": "Proteobacteria"
  },
  {
    "id": "SEQ_002",
    "cluster": "CL_02",
    "length": 140,
    "quality": 95,
    "taxa": "Novel"
  }
]
```

* **Clusters Example JSON:**

```json
[
  {
    "id": "CL_01",
    "sequence_count": 120,
    "consensus_sequence": "ATGCGT...",
    "novelty_score": 0.2
  },
  {
    "id": "CL_02",
    "sequence_count": 85,
    "consensus_sequence": "GCTAGC...",
    "novelty_score": 0.8
  }
]
```

* **Metrics Example JSON:**

```json
{
  "shannon_index": 3.5,
  "richness": 120,
  "evenness": 0.78,
  "known_taxa_percent": 65,
  "novel_taxa_percent": 35
}
```

---

### **5. API Integration Readiness**

* **Service Layer (React hooks):**

  * `useSequences()`: fetch sequences
  * `useClusters()`: fetch clusters and their details
  * `useMetrics()`: fetch biodiversity metrics
  * Placeholder: `axios.get('/api/sequences')` â†’ returns JSON
* **Easy replacement** with real endpoints

---

### **6. Additional Notes**

* Clean, professional UI: no overly fancy gradients, shadows subtle, focus on readability
* Consistent spacing, typography, and component reuse
* Fully responsive for desktop/tablet/mobile
* Placeholder data must allow **visualization of charts, tables, and cards**
* Extensible for future features: sample uploads, embeddings visualization, export data
